#!/usr/bin/env python3
from argparse import ArgumentParser
from os import environ, getenv
from subprocess import run, PIPE, Popen
from sys import exit
import re

def send_fifo(command):
    """Send command to qutebrowser FIFO."""
    with open(getenv("QUTE_FIFO"), "w") as fifo:
        fifo.write(command + "\n")

def quickmarks_menu():
    with open(getenv("QUTE_CONFIG_DIR") + '/quickmarks', 'r') as f:
        quickmarks=[]
        aliases=[]
        for line in f:
            quickmarks.append(''.join(['<b>', re.sub(' ', '</b>&#10;<i>', line.strip()), '</i>', '\n']))
            aliases.append(line.split()[0])
    p1=Popen(['printf', '%s\n', ''.join(quickmarks)], stdout=PIPE)
    p2 = Popen([ 'rofi'
                 , '-dmenu'
                 , '-i'
                 , '-filter'
                 , '^'
                 # , '-sort'
                 # , '-sorting-method'
                 # , 'fzf'
                 , '-matching'
                 , 'regex'
                 , '-no-config'
                 , '-markup-rows'
                 , '-eh'
                 , '2'
                 , '-format'
                 , 'f'
                 , '-theme-str' 
                 , 'window { anchor: north; location: north; width: 100%; font-size: 20px; border: 0px; } listview { border: 0px 0px 0px 0px; layout: vertical; spacing:5px; lines: 10; width: 0px; } element-text { color: #666; } element selected.normal { background-color: #ded; } '
                 , '-kb-accept-entry' 
                 , 'Ctrl+j,Ctrl+m,Return,KP_Enter'
                 , '-kb-cancel'
                 , 'Escape,Control+g,Control+bracketleft'
                 , '-window-title'
                 , 'Alias'
                 , '-font'
                 , 'Inconsolata 16'
                ]
               , stdin=p1.stdout
               , stdout=PIPE
               , stderr=PIPE
               , universal_newlines=True
               )
    p1.stdout.close()
    result_quickmarks= re.sub(r'<.*?>', '', re.sub("^\^", "", p2.communicate()[0].partition("&#10;")[0].strip()))
    p2.stdout.close()
    if p2.returncode == 0:
        if result_quickmarks in aliases: 
            p3=Popen(['printf', '%s\n', '\n'.join(["no", "yes", "rename"])], stdout=PIPE)
            p4 = Popen([ 'rofi'
                     , '-dmenu'
                     , '-i'
                     , '-no-config'
                     , '-no-custom'
                     , '-eh'
                     , '2'
                     , '-theme-str' 
                     , 'window { anchor: north; location: north; width: 100%; font-size: 20px; border: 0px; } listview { border: 0px 0px 0px 0px; layout: vertical; spacing:5px; lines: 3; width: 0px; } element active {background: rgba(0,0,0,0);} textbox-prompt-colon { enabled: false;}'
                     , '-kb-accept-entry' 
                     , 'Ctrl+j,Ctrl+m,Return,KP_Enter'
                     , '-kb-cancel'
                     , 'Escape,Control+g,Control+bracketleft'
                     , '-p'
                     , "Overwrite quickmark '" + result_quickmarks + "'? "
                     , '-font'
                     , 'Inconsolata 16'
                    ]
                   , stdin=p3.stdout
                   , stdout=PIPE
                   , stderr=PIPE
                   , universal_newlines=True
                   )
            p3.stdout.close()
            result_overwrite= p4.communicate()[0].strip()
            p4.stdout.close()
            match result_overwrite:
                case "yes":
                    with open(getenv("QUTE_CONFIG_DIR") + '/quickmarks', 'r') as fr:
                        lines = fr.readlines()
                        new_lines = []
                        for line in lines:
                            if not bool(re.match("^" + result_quickmarks + " [^ ]*$", line)):
                                new_lines.append(line)
                        new_lines.append(result_quickmarks + " " + environ['QUTE_URL'] + "\n")
                        with open(getenv("QUTE_CONFIG_DIR") + '/quickmarks', 'w') as fw:
                            fw.writelines(new_lines)
                case "rename":
                    quickmarks_menu()
        else:
            quickmark = ' '.join([result_quickmarks, environ['QUTE_URL']])
            with open(getenv("QUTE_CONFIG_DIR") + '/quickmarks', 'a') as f:
                f.write(quickmark + "\n")
            send_fifo("message-info '" + quickmark + "'")
        exit()
    else:
        exit()


quickmarks_menu()

